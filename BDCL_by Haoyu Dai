function B_all=BDCL(inc)
cell_num=30;%蜂窝个数
m=10;%信道个数
calls=zeros(2*cell_num,500); %2i-1行，j列代表第i个蜂窝的第j次呼叫的到达时间（时间间隔满足指数分布）
                             %2i行，j列代表第i个蜂窝第j次呼叫的结束时间（持续时间满足指数分布）
miu=3*60;
lambda=zeros(1,30);
for i=1:30
    lambda(i)=100*(1+inc/100)/3600;
end




intv=1./lambda;%到达时间的间隔成1/λ的指数分布


blc=zeros(1,30);

%生成泊松呼叫矩阵
for i=1:30
    t_cnt=0;
    for j=1:500
       t_cnt=t_cnt+roundn(exprnd(intv(i)),-1);  %到达时间间隔成指数分布
       t_intv=roundn(exprnd(miu),-1);           %持续时间成指数分布

       calls(2*i-1,j)=t_cnt;                   %记录下到达时间
       calls(2*i,j)=calls(2*i-1,j)+t_intv;     %记录下离开时间

    end
end

%生成包含所有蜂窝内信道状态向量的状态矩阵
sta=zeros(cell_num,2*m);
index=ones(1,30); %index(i)指的是蜂窝i内已经到达了index个呼叫，初始值定义为1，当有一个呼叫到达，index(i)++
for t=0:0.1:7200 %计时器                                
    for i=1:30  %对每一个蜂窝分别进行阻塞分析
        %将当前时刻与该蜂窝的到达时间与离开时间进行匹配
        %
        %①先对离开时间进行匹配(判断 前index(i)个离开时间数组元素中的最小值 是否与当下的时间t一样)
        
            
                if abs(t-min(calls(2*i,1:index(i))))<0.1 %此刻蜂窝i内有一个呼叫结束
                    j=find(calls(2*i,1:index(i))==min(calls(2*i,1:index(i))));
                    calls(2*i,j)=inf;%呼叫结束，将其离开时间置为inf
                    %要记得把该离开时间置为inf
                        if mod(i,2)==0   %如果i为偶数,自身信道为前m个
                             x=max(sta(i,m+1:2*m));
                             if x==0 %未借用信道，形如1110...0|0000...000
                                 ind=find(sta(i,1:m));
                                 L=length(ind);
                                 if L>0
                                     sta(i,L)=0;
                                 end
                             else                       %借用了信道，形如11111111|0000...011
                                 ind=find(sta(i,m+1:2*m));
                                 sta(i,m+ind(1))=0;
                                 
                             end
                        else              %如果i为奇数，自身信道为后m个
                            x=max(sta(i,1:m));
                            if x==0       %未借用信道，形如000...000|1110...00
                                ind=find(sta(i,m+1:2*m));
                                L=length(ind);
                                if L>0
                                    sta(i,m+L)=0;
                                end
                                
                            else                        %借用了信道，形如000...011|111111111
                                ind=find(sta(i,1:m));
                                L=length(ind);
                                sta(i,ind(1))=0;
                                
                            end
                        end
                        
                end
        
      
        %②接下来对到达时间进行匹配(判断 第index(i) 个离开时间数组元素是否与当下的时间t一样)
       
            if abs(t-calls(2*i-1,index(i)))<0.1  %此刻蜂窝i内有一个呼叫到达
                
                %要记得给index(i)++
                if i==1
                    tmp=sta(i,:)+sta(i+1,:);
                    x=min(tmp);
                    if x~=0 %阻塞,同时需要让相应的结束时间置为inf
                        blc(i)=blc(i)+1;        %阻塞次数++
                        calls(2*i,index(i))=inf;%将相应的结束时间置为inf
                    else                        %接纳
                        %判断一下是否需要借用信道
                        if sum(sta(i,m+1:2*m))==m        %需要借用，此时形如0000...001|111111111
                                 if sum(sta(i,1:m))==0
                                     sta(i,m)=1;
                                 else
                                     ind=find(sta(i,1:m));
                                     sta(i,ind(1)-1)=1;
                                 end
                        else                             %不需要借用，此时形如0000...00|1110..00
                                 ind=find(sta(i,m+1:2*m));
                                 L=length(ind)+1;
                                 sta(i,m+L)=1;
                        end
                    end
                elseif i==30
                    tmp=sta(i,:)+sta(i-1,:);
                    x=min(tmp);
                    if x~=0 %阻塞
                        blc(i)=blc(i)+1;
                        calls(2*i,index(i))=inf;
                    else                     %接纳
                        %判断一下是否需要借用信道
                        if sum(sta(i,1:m))==m  %需要借用,此时形如111111111|000...001
                                 if sum(sta(i,m+1:2*m))==0
                                     sta(i,2*m)=1;
                                 else
                                     ind=find(sta(i,m+1:2*m));
                                     sta(i,m+ind(1)-1)=1;
                                 end
                        else                   %不需要借用，此时形如1110..000|000...000
                                 ind=find(sta(i,1:m));
                                 L=length(ind);
                                 sta(i,L+1)=1;
                        end
                    end
                else
                    tmp=sta(i-1,:)+sta(i,:)+sta(i+1,:);
                    x=min(tmp);
                    if x~=0  %阻塞
                         blc(i)=blc(i)+1;
                         calls(2*i,index(i))=inf;
                    else                         %接纳
                         %判断一下是否需要借用信道
                         if mod(i,2)==0       %i为偶数，其原始信道为1：m
                             if sum(sta(i,1:m))==m  %需要借用,此时形如111111111|000...001
                                 if sum(sta(i,m+1:2*m))==0
                                     sta(i,2*m)=1;
                                 else
                                     ind=find(sta(i,m+1:2*m));
                                     sta(i,m+ind(1)-1)=1;
                                 end
                             else                   %不需要借用，此时形如1110..000|000...000
                                 ind=find(sta(i,1:m));
                                 L=length(ind);
                                 sta(i,L+1)=1;
                             end
                         else                 %i为奇数，其原始信道为m+1:2m
                             if sum(sta(i,m+1:2*m))==m %需要借用，此时形如0000...001|111111111
                                 if sum(sta(i,1:m))==0
                                     sta(i,m)=1;
                                 else
                                     ind=find(sta(i,1:m));
                                     sta(i,ind(1)-1)=1;
                                 end
                             else                      %不需要借用，此时形如0000...00|1110..00
                                 ind=find(sta(i,m+1:2*m));
                                 L=length(ind)+1;
                                 sta(i,m+L)=1;
                             end
                         end
                    end
                end
                index(i)=index(i)+1;
            end
        
        
    end
end
%计时结束，所有蜂窝的阻塞次数已经计算完毕

%每个蜂窝C(i)的阻塞的次数被记录在了blc数组里，即blc(i)

%每个蜂窝C(i)中到达的呼叫次数记录在了index数组中，即index(i)

%首先计算出每个蜂窝的阻塞概率，然后用加权平均来算出Overall的阻塞概率
B=[]; 
for i=1:30
    B(i)=blc(i)/index(i);
end
lambda_all=sum(lambda);
B_all=0;
for i=1:30
    B_all=B_all+B(i)*lambda(i)/lambda_all;
end
end
